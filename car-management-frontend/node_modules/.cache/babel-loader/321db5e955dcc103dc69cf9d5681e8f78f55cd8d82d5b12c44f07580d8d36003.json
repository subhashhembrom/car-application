{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\Car Managment Application\\\\car-management-frontend\\\\src\\\\components\\\\CreateProduct.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './CreateProduct.css'; \n\n// const ProductCreation = () => {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [image, setImage] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState('');\n\n//   // Handle title input change\n//   const handleTitleChange = (e) => {\n//     setTitle(e.target.value);\n//     console.log(e.target.value);\n//   };\n\n//   // Handle description input change\n//   const handleDescriptionChange = (e) => {\n//     setDescription(e.target.value);\n//     console.log(e.target.value);\n//   };\n\n//   // Handle image file input change\n//   const handleImageChange = (e) => {\n//     setImage(e.target.files[0]);\n//     console.log(e.target.value);\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!title || !description || !image) {\n//       setMessage('Please fill all the fields.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('title', title);\n//     formData.append('description', description);\n//     formData.append('image', image);\n\n//  Array.from(formData).forEach(([key, value]) => {\n//   console.log(key, value);\n// });\n\n//     try {\n//       setLoading(true);\n\n//       const token = localStorage.getItem('token'); \n\n//       console.log(localStorage.getItem('token'));\n\n//       const response = await axios.post('http://localhost:8000/api/cars/create', formData, {\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setLoading(false);\n//       setMessage('Product created successfully!');\n//       console.log(response.data); // Handle the response\n//     } catch (error) {\n//       setLoading(false);\n//       setMessage('Error creating product.');\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"product-creation-page\">\n//       <h1>Create a New Product</h1>\n//       <form onSubmit={handleSubmit} className=\"product-form\">\n//         <div className=\"form-group\">\n//           <label htmlFor=\"title\">Title</label>\n//           <input\n//             type=\"text\"\n//             id=\"title\"\n//             value={title}\n//             onChange={handleTitleChange}\n//             placeholder=\"Enter product title\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"description\">Description</label>\n//           <textarea\n//             id=\"description\"\n//             value={description}\n//             onChange={handleDescriptionChange}\n//             placeholder=\"Enter product description\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"image\">Image</label>\n//           <input\n//             type=\"file\"\n//             id=\"image\"\n//             accept=\"image/*\"\n//             onChange={handleImageChange}\n//           />\n//         </div>\n\n//         {message && <div className=\"message\">{message}</div>}\n\n//         <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n//           {loading ? 'Submitting...' : 'Create Product'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ProductCreation;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCreation = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !description || !image) {\n      setMessage('Please fill all fields.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n\n      // Upload image to Cloudinary through the backend\n      const uploadResponse = await axios.post('http://localhost:8000/api/upload', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Extract image URL from the response\n      const imageUrl = uploadResponse.data.imageUrl;\n\n      // Now send title, description, and image URL to your backend\n      const productData = {\n        title,\n        description,\n        imageUrl\n      };\n      const response = await axios.post('http://localhost:8000/api/cars/create', productData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setLoading(false);\n      setMessage('Product created successfully!');\n    } catch (error) {\n      setLoading(false);\n      setMessage('Error creating product.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductCreation, \"rKGvae2D4esK3vDFEslcudt/H9E=\");\n_c = ProductCreation;\nexport default ProductCreation;\nvar _c;\n$RefreshReg$(_c, \"ProductCreation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProductCreation","_s","title","setTitle","description","setDescription","image","setImage","loading","setLoading","message","setMessage","handleSubmit","e","preventDefault","formData","FormData","append","token","localStorage","getItem","uploadResponse","post","headers","imageUrl","data","productData","response","error","console","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/Car Managment Application/car-management-frontend/src/components/CreateProduct.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './CreateProduct.css'; \r\n\r\n// const ProductCreation = () => {\r\n//   const [title, setTitle] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [image, setImage] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   // Handle title input change\r\n//   const handleTitleChange = (e) => {\r\n//     setTitle(e.target.value);\r\n//     console.log(e.target.value);\r\n//   };\r\n\r\n//   // Handle description input change\r\n//   const handleDescriptionChange = (e) => {\r\n//     setDescription(e.target.value);\r\n//     console.log(e.target.value);\r\n//   };\r\n\r\n//   // Handle image file input change\r\n//   const handleImageChange = (e) => {\r\n//     setImage(e.target.files[0]);\r\n//     console.log(e.target.value);\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!title || !description || !image) {\r\n//       setMessage('Please fill all the fields.');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('title', title);\r\n//     formData.append('description', description);\r\n//     formData.append('image', image);\r\n\r\n//  Array.from(formData).forEach(([key, value]) => {\r\n//   console.log(key, value);\r\n// });\r\n\r\n//     try {\r\n//       setLoading(true);\r\n      \r\n\r\n//       const token = localStorage.getItem('token'); \r\n\r\n//       console.log(localStorage.getItem('token'));\r\n\r\n//       const response = await axios.post('http://localhost:8000/api/cars/create', formData, {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`,\r\n//           'Content-Type': 'multipart/form-data',\r\n//         },\r\n//       });\r\n//       setLoading(false);\r\n//       setMessage('Product created successfully!');\r\n//       console.log(response.data); // Handle the response\r\n//     } catch (error) {\r\n//       setLoading(false);\r\n//       setMessage('Error creating product.');\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"product-creation-page\">\r\n//       <h1>Create a New Product</h1>\r\n//       <form onSubmit={handleSubmit} className=\"product-form\">\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"title\">Title</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"title\"\r\n//             value={title}\r\n//             onChange={handleTitleChange}\r\n//             placeholder=\"Enter product title\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"description\">Description</label>\r\n//           <textarea\r\n//             id=\"description\"\r\n//             value={description}\r\n//             onChange={handleDescriptionChange}\r\n//             placeholder=\"Enter product description\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"image\">Image</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             accept=\"image/*\"\r\n//             onChange={handleImageChange}\r\n//           />\r\n//         </div>\r\n\r\n//         {message && <div className=\"message\">{message}</div>}\r\n\r\n//         <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n//           {loading ? 'Submitting...' : 'Create Product'}\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProductCreation;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProductCreation = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title || !description || !image) {\r\n      setMessage('Please fill all fields.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n\r\n      // Upload image to Cloudinary through the backend\r\n      const uploadResponse = await axios.post(\r\n        'http://localhost:8000/api/upload',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        }\r\n      );\r\n\r\n      // Extract image URL from the response\r\n      const imageUrl = uploadResponse.data.imageUrl;\r\n\r\n      // Now send title, description, and image URL to your backend\r\n      const productData = {\r\n        title,\r\n        description,\r\n        imageUrl,\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:8000/api/cars/create', productData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      setLoading(false);\r\n      setMessage('Product created successfully!');\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setMessage('Error creating product.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Form fields for title, description, and image input */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductCreation;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}